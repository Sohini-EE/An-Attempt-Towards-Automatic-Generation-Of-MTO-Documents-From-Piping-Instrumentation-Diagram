# -*- coding: utf-8 -*-
"""Copy of EasyOCR_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RdOF-skFIYv3PRar200In2KRoc342q6O
"""

!pip install easyocr==1.7.1
!pip install matplotlib==3.7.1

!pip install matplotlib

!pip install opencv-python-headless

!pip install numpy==1.24.2

import numpy as np
print(np.__version__)

# here we are importing the required libraries
import cv2
import easyocr
import matplotlib.pyplot as plt

#reading images
image_path='/content/sample10.jpg'
img=cv2.imread(image_path)

#instance text detector
reader=easyocr.Reader(['en'], gpu=True)

threshold = 0.2

#DETECT Text
detections=reader.readtext(img)
print(detections)

import pandas as pd

#Draw all detected texts on original image

count=1 #initialize serial number
csv_data=[] #store csv data

for t in detections:
  print(t)
  bbox,text,score=t
  if score>=threshold:
    #convert bbox points to integer tuples
    pts=np.array(bbox,dtype=np.int32)
    x_coords=pts[:,0]
    y_coords=pts[:,1]
    x_min,y_min=np.min(x_coords),np.min(y_coords)
    x_max,y_max=np.max(x_coords),np.max(y_coords)
    width=x_max-x_min
    height=y_max-y_min

    if height>width:
        #crop the text region and rotate it
        cropped=img[y_min:y_max,x_min:x_max]
        rotated=cv2.rotate(cropped,cv2.ROTATE_90_CLOCKWISE)
        #re-run ocr on rotated bounding box
        rotated_text=reader.readtext(rotated)

        for rt in rotated_text:
          print(rt)
          rbbox,rtext,rscore=rt
          if rscore>=threshold:
            cv2.rectangle(img,(x_min,y_min),(x_max,y_max),(0,0,255),2) #red box
           # cv2.putText(img,rtext,(x_min,y_min-10),cv2.FONT_HERSHEY_COMPLEX,0.65,(255,0,0),2) #blue text
            cv2.putText(img,f"{count}",(x_min,y_min-15),cv2.FONT_HERSHEY_COMPLEX,0.65,(100,0,100),2)
            csv_data.append({'Serial No': count, 'Text': rtext})
            count+=1
    else:
      #for horizontaltext
      top_left=tuple(map(int,bbox[0]))
      bottom_right=tuple(map(int,bbox[2]))
      cv2.rectangle(img,top_left,bottom_right,(0,255,0),2) #green box
      #cv2.putText(img,text,(top_left[0]+25,top_left[1]-15),cv2.FONT_HERSHEY_COMPLEX,0.65,(255,0,0),2) #blue text
      cv2.putText(img,f"{count}.",(top_left[0],top_left[1]-15),cv2.FONT_HERSHEY_COMPLEX,0.65,(100,0,100),2)
      csv_data.append({'Serial No': count, 'Text': text})
      count+=1

#save to csv
df=pd.DataFrame(csv_data)
df.to_csv('detected_text.csv',index=False)

#show image
plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB))
plt.show()

#save the image with original resolution

cv2.imwrite('result.jpg',img)
from google.colab import files
files.download('result.jpg')
files.download("detected_text.csv")

#Streamlit application
!pip install streamlit pyngrok

!ngrok config add-authtoken 2vzGH6OdWvttzUdmBGBMxD9nF1i_4rBw4gNbUQVfNPAFkWyV3


%%writefile app.py
import streamlit as st
import pandas as pd
from PIL import Image

# Load image and CSV
image = Image.open("result.jpg")
df = pd.read_csv("detected_text.csv")
 
st.title("PID Text Annotations Viewer")
st.image(image, caption="Annotated PID Image", use_container_width=True)
 
st.markdown("### Click on a serial number to see its annotation:")

# Sidebar or main area for interaction
for i, row in df.iterrows():
    if st.button(f"Serial No. {row['Serial No']}"):
        st.success(f"Text: {row['Text']}")

from pyngrok import ngrok
import os

# Kill any existing streamlit processes (optional safety)
!pkill streamlit

# Start Streamlit app in the background
!streamlit run app.py &>/content/log.txt &

# Connect to the default Streamlit port (8501) using HTTP protocol
public_url = ngrok.connect("8501", "http")
print(f"Streamlit App is live at: {public_url}")